# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CampVariant {
  id: Int!
  campId: Int!
  name: String
  price: Decimal
  remainingCapacity: Int!
  capacity: Int!
  startDate: DateTime!
  endDate: DateTime!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  camp: Camp!
  campVariantRegistrations: [CampVariantRegistration!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Allergy {
  id: Int!
  nameEn: String!
  nameAr: String!
  category: Int!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  children: [Child!]
}

type Child {
  id: Int!
  parentId: String!
  name: String!
  birthdate: DateTime!
  schoolId: Int!
  isMale: Boolean!
  parentRelation: ParentRelation!
  imageFileId: Int
  medicalInfo: String
  otherAllergies: String
  extraNotes: String
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  allergies: [Allergy!]
  campVariantRegistrations: [CampVariantRegistration!]!
}

enum ParentRelation {
  father
  mother
  grandParent
  uncle
}

type CampVariantRegistration {
  id: Int!
  childId: Int!
  campRegistrationId: Int!
  campVariantId: Int!
  price: Decimal!
  mealPrice: Decimal
  shirtSize: ShirtSize
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  campRegistration: CampRegistration!
  child: Child!
  campVariant: CampVariant!
}

enum ShirtSize {
  xxs
  xs
  s
  m
  l
  xl
  xxl
}

type RegistrationPayment {
  id: Int!
  campRegistrationId: Int!
  paymentMethod: PaymentMethod!
  url: String
  status: PaymentStatus!
  amount: Decimal!
  receiptId: Int
  userId: String!
  expirationDate: DateTime
  createdAt: DateTime!
  campRegistration: CampRegistration!
}

enum PaymentMethod {
  fawry
  instapay
  cash
}

enum PaymentStatus {
  pending
  paid
  failed
  refunded
  expired
}

type CampRegistration {
  id: Int!
  parentId: String!
  campId: Int!
  oneDayPrice: Decimal
  totalPrice: Decimal
  paymentMethod: PaymentMethod
  capacity: Int
  paid: Boolean!
  status: CampRegistrationStatus!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  campVariantRegistrations: [CampVariantRegistration!]
  payments: [RegistrationPayment!]!
  camp: Camp!
}

enum CampRegistrationStatus {
  idle
  pending
  accepted
  rejected
  cancelled
  modified
}

type File {
  id: Int!
  name: String!
  type: FileType!
  key: String!
  userId: String!
  sizeInKb: Int!
  createdAt: DateTime!
  url: String!
}

enum FileType {
  video
  image
  audio
  pdf
  doc
  other
}

type Event {
  id: Int!
  name: String!
  description: String!
  thumbnailId: Int!
  startDate: DateTime!
  endDate: DateTime!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  earlyBirdId: Int
  files: [File!]!
  camps: [Camp!]
  thumbnail: File
}

type Location {
  id: Int!
  name: String!
  geoPoint: GraphqlPoint
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  camps: [Camp!]
}

type Camp {
  id: Int!
  name: String!
  description: String
  thumbnailId: Int!
  defaultPrice: Decimal
  mealPrice: Decimal
  hasShirts: Boolean!
  eventId: Int
  isPrivate: Boolean!
  defaultCapacity: Int
  locationId: Int!
  discountId: Int!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  ageRanges: [AgeRange!]
  files: [File!]
  campVariants: [CampVariant!]
  location: Location!
  event: Event
  campRegistrations: [CampRegistration!]
  thumbnail: File!
  parentCampRegistration(parentId: String): CampRegistration
}

type AgeRange {
  id: Int!
  name: String
  minAge: Int
  maxAge: Int
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  camps: [Camp!]
}

type CampPage {
  cursor: GraphqlCursor!
  data: [Camp!]!
}

"""Cursor scalar type for pagination"""
scalar GraphqlCursor

type User {
  id: String!
  name: String!
  type: UserType!
  email: String!
  phone: String
  district: String
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
  parentAdditionals: [ParentAdditional!]!
  children: [Child!]!
}

enum UserType {
  admin
  parent
  customerService
}

type RegistrationReserve {
  id: Int!
  campRegistrationId: Int!
  campVariantId: Int!
  count: Int!
  paymentId: Int!
  userId: String!
  expirationDate: DateTime
  createdAt: DateTime!
}

type CampRegistrationPage {
  cursor: GraphqlCursor!
  data: [CampRegistration!]!
}

type ChildPage {
  cursor: GraphqlCursor!
  data: [Child!]!
}

type ChildReport {
  id: Int!
  childId: Int!
  campVariantId: Int!
  type: ChildReportType!
  status: ChildReportStatus!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
}

enum ChildReportType {
  incident
}

enum ChildReportStatus {
  new
  followUp
  closed
}

type ChildReportHistory {
  childReportId: Int!
  reportTime: DateTime!
  gameName: String!
  details: String!
  actionsTaken: String!
  status: ChildReportStatus!
  userId: Int!
}

type Discount {
  code: String
  percentage: Decimal
  amount: Decimal
  startDate: DateTime
  endDate: DateTime
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
}

type EventPage {
  cursor: GraphqlCursor!
  data: [Event!]!
}

type EventFile {
  """Example field (placeholder)"""
  exampleField: Int!
}

type LocationsPage {
  cursor: GraphqlCursor!
  data: [Location!]!
}

type Meal {
  id: Int!
  name: String!
  price: Decimal!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
}

type MealPage {
  cursor: GraphqlCursor!
  data: [Meal!]!
}

type ResponseWrapper {
  success: Boolean!
  message: String!
  data: JSONObject
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type ParentAdditional {
  id: Int!
  userId: String!
  name: String!
  email: String
  phone: String!
  createdAt: DateTime!
  lastModified: DateTime!
  deletedAt: DateTime
}

type RegistrationHistory {
  campRegistrationId: Int!
  status: CampRegistrationStatus!
  createdAt: DateTime!
  lastModified: DateTime!
}

type Settings {
  id: Int!
  sizeChartFileId: Int
  coachForm: String
}

type UserAuthResponse {
  user: User
  accessToken: String

  """0: No User, 1: Incomplete User, 2: Complete User"""
  userState: Int
  message: String!
}

type CreateUserResponse {
  success: Boolean!
  message: String!
  data: UserAuthResponse
}

type UsersPage {
  cursor: GraphqlCursor!
  data: [User!]!
}

type School {
  id: Int!
  nameEn: String!
  nameAr: String!
  imageKey: String
  createdAt: DateTime!
  lastModified: DateTime!
  url: String
}

type SchoolPage {
  cursor: GraphqlCursor!
  data: [School!]!
}

"""Decimal custom scalar type"""
scalar Decimal

"""MYSQL Point representation of coordinates."""
scalar GraphqlPoint

type Query {
  meal(id: Int!): Meal!
  paginateMeals(input: PaginateMealsInput!): MealPage!
  file(id: Int!): File!
  campVariant(id: Int!): CampVariant!
  location(id: Int!): Location!
  paginateLocations(input: PaginateLocationsInput!): LocationsPage!
  parentAdditional(id: Int!): ParentAdditional!
  child(id: Int!): Child!
  paginateChildren(input: PaginateChildrenInput!): ChildPage!
  campVariantRegistration(id: Int!): CampVariantRegistration!
  findOneCamp(id: Int!): Camp!
  paginateCamps(input: PaginateCampsInput!): CampPage!
  findOneEvent(id: Int!): Event!
  paginateEvents(input: PaginateEventsInput!): EventPage!
  user: [User!]!
  findOneUser(id: String!): User!
  paginateUsers(input: PaginateUsersInput!): UsersPage!
  ageRange(id: Int!): AgeRange!
  allergy(id: Int!): Allergy!
  campRegistration(id: Int!): CampRegistration!
  paginateCampRegistrations(input: PaginateCampRegistrationsInput!): CampRegistrationPage!
  childReport(id: Int!): ChildReport!
  childReportHistory(id: Int!): ChildReportHistory!
  discount(id: Int!): Discount!
  eventFile(id: Int!): EventFile!
  registrationHistory(id: Int!): RegistrationHistory!
  registrationPaymentHistory(id: Int!): RegistrationPayment!
  settings: [Settings!]!
  setting(id: Int!): Settings!
  school(id: Int!): School!
  paginateSchools(input: PaginateSchoolsInput!): SchoolPage!
  registrationReserve(id: Int!): RegistrationReserve!
}

input PaginateMealsInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
}

input PaginateLocationsInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
  name: String
}

input PaginateChildrenInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
  parentId: String
  name: String
  campId: Int
}

input PaginateCampsInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
}

input PaginateEventsInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
}

input PaginateUsersInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
  name: String
  types: [UserType!]
  notTypes: [UserType!]
  orderBy: UsersOrderField
}

enum UsersOrderField {
  name
  email
  phone
  district
  createdAt
  lastModified
}

input PaginateCampRegistrationsInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
  campIds: [Int!]
  childIds: [Int!]
  parentIds: [String!]
}

input PaginateSchoolsInput {
  isAsc: Boolean! = false
  limit: Int = 20
  afterCursor: String
  beforeCursor: String
  name: String
}

type Mutation {
  createMeal(input: CreateMealInput!): ResponseWrapper!
  updateMeal(updateMealInput: UpdateMealInput!): Meal!
  removeMeal(id: Int!): Meal!
  createFile(createFileInput: CreateFileInput!): File!
  updateFile(updateFileInput: UpdateFileInput!): File!
  removeFile(id: Int!): JSONObject!
  createCampVariant(createCampVariantInput: CreateCampVariantInput!): CampVariant!
  updateCampVariant(updateCampVariantInput: UpdateCampVariantInput!): CampVariant!
  removeCampVariant(id: Int!): CampVariant!
  createLocation(input: CreateLocationInput!): Location!
  updateLocation(input: UpdateLocationsInput!): Location!
  removeLocation(ids: [Int!]!): Location!
  createParentAdditional(createParentAdditionalInput: CreateParentAdditionalInput!): ParentAdditional!
  updateParentAdditional(input: UpdateParentAdditionalInput!): JSONObject!
  removeParentAdditional(id: Int!): ParentAdditional!
  createChild(createChildInput: CreateChildInput!): Child!
  updateChild(input: UpdateChildInput!): JSONObject!
  removeChild(id: Int!): Child!
  createCampVariantRegistration(createCampVariantRegistrationInput: CreateCampVariantRegistrationInput!): CampVariantRegistration!
  updateCampVariantRegistration(updateCampVariantRegistrationInput: UpdateCampVariantRegistrationInput!): CampVariantRegistration!
  removeCampVariantRegistration(id: Int!): CampVariantRegistration!
  createCamp(input: CreateCampInput!): JSONObject!
  updateCamp(input: UpdateCampInput!): JSONObject!
  removeCamp(id: Int!): Camp!
  createEvent(createEventInput: CreateEventInput!): Event!
  updateEvent(updateEventInput: UpdateEventInput!): Event!
  removeEvent(id: Int!): Event!
  tempLogin(input: TempSignInInput!): JSONObject!
  signIn(input: TokenRequestInput!): UserAuthResponse!
  createUser(input: CreateUserInput!): CreateUserResponse!
  updateUser(input: UpdateUserInput!): JSONObject!
  removeUser(id: String!): User!
  createAgeRange(createAgeRangeInput: CreateAgeRangeInput!): AgeRange!
  updateAgeRange(updateAgeRangeInput: UpdateAgeRangeInput!): AgeRange!
  removeAgeRange(id: Int!): AgeRange!
  createAllergy(createAllergyInput: CreateAllergyInput!): Allergy!
  updateAllergy(updateAllergyInput: UpdateAllergyInput!): Allergy!
  removeAllergy(id: Int!): Allergy!
  createCampRegistration(input: CreateCampRegistrationInput!): JSONObject!
  completeCampRegistration(input: UpdateCampRegistrationInput!): JSONObject!
  removeCampRegistration(id: Int!): CampRegistration!
  processCampRegistration(input: ProcessCampRegistration!): JSONObject!
  createChildReport(createChildReportInput: CreateChildReportInput!): ChildReport!
  updateChildReport(updateChildReportInput: UpdateChildReportInput!): ChildReport!
  removeChildReport(id: Int!): ChildReport!
  createChildReportHistory(createChildReportHistoryInput: CreateChildReportHistoryInput!): ChildReportHistory!
  updateChildReportHistory(updateChildReportHistoryInput: UpdateChildReportHistoryInput!): ChildReportHistory!
  removeChildReportHistory(id: Int!): ChildReportHistory!
  createDiscount(createDiscountInput: CreateDiscountInput!): Discount!
  updateDiscount(updateDiscountInput: UpdateDiscountInput!): Discount!
  removeDiscount(id: Int!): Discount!
  createEventFile(createEventFileInput: CreateEventFileInput!): EventFile!
  updateEventFile(updateEventFileInput: UpdateEventFileInput!): EventFile!
  removeEventFile(id: Int!): EventFile!
  enterAttendance(input: CreateRegistrationAttendanceInput!): JSONObject!
  leaveAttendance(id: Int!): JSONObject!
  createRegistrationHistory(createRegistrationHistoryInput: CreateRegistrationHistoryInput!): RegistrationHistory!
  updateRegistrationHistory(updateRegistrationHistoryInput: UpdateRegistrationHistoryInput!): RegistrationHistory!
  removeRegistrationHistory(id: Int!): RegistrationHistory!
  createRegistrationPaymentHistory(createRegistrationPaymentHistoryInput: CreateRegistrationPaymentHistoryInput!): RegistrationPayment!
  updateRegistrationPaymentHistory(updateRegistrationPaymentHistoryInput: UpdateRegistrationPaymentHistoryInput!): RegistrationPayment!
  removeRegistrationPaymentHistory(id: Int!): RegistrationPayment!
  createSetting(createSettingInput: CreateSettingInput!): Settings!
  updateSetting(updateSettingInput: UpdateSettingInput!): Settings!
  removeSetting(id: Int!): Settings!
  createSchool(createSchoolInput: CreateSchoolInput!): School!
  updateSchool(updateSchoolInput: UpdateSchoolInput!): School!
  removeSchool(id: Int!): School!
  createRegistrationReserve(createRegistrationReserveInput: CreateRegistrationReserveInput!): RegistrationReserve!
  updateRegistrationReserve(updateRegistrationReserveInput: UpdateRegistrationReserveInput!): RegistrationReserve!
  removeRegistrationReserve(id: Int!): RegistrationReserve!
}

input CreateMealInput {
  name: String!
  price: Decimal!
}

input UpdateMealInput {
  name: String
  price: Decimal
  id: Int!
}

input CreateFileInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFileInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCampVariantInput {
  name: String
  price: Decimal
  capacity: Int!
  startDate: DateTime!
  endDate: DateTime!
}

input UpdateCampVariantInput {
  name: String
  price: Decimal
  capacity: Int
  startDate: DateTime
  endDate: DateTime
  id: Int!
}

input CreateLocationInput {
  name: String!
  location: GraphqlPoint
}

input UpdateLocationsInput {
  locations: [UpdateLocationInput!]!
}

input UpdateLocationInput {
  name: String
  location: GraphqlPoint
  id: Int!
}

input CreateParentAdditionalInput {
  name: String!
  email: String
  phone: String!
}

input UpdateParentAdditionalInput {
  id: Int!
  name: String
  email: String
  phone: String
}

input CreateChildInput {
  name: String!
  birthdate: DateTime!
  schoolId: Int!
  isMale: Boolean!
  parentRelation: ParentRelation!
  imageFileId: Int
  medicalInfo: String
  otherAllergies: String
  extraNotes: String
  allergies: [Int!]
}

input UpdateChildInput {
  id: Int!
  name: String
  birthdate: DateTime
  schoolId: Int
  isMale: Boolean
  parentRelation: ParentRelation
  imageFileId: Int
  medicalInfo: String
  otherAllergies: String
  extraNotes: String
  allergiesToDelete: [Int!] = []
  allergiesToAdd: [Int!] = []
}

input CreateCampVariantRegistrationInput {
  childId: Int!
  campVariantId: Int!
  withMeal: Boolean
  shirtSize: ShirtSize
}

input UpdateCampVariantRegistrationInput {
  childId: Int
  campVariantId: Int
  withMeal: Boolean
  shirtSize: ShirtSize
  id: Int!
}

input CreateCampInput {
  name: String!
  description: String
  thumbnailId: Int!
  defaultPrice: Decimal
  mealPrice: Decimal
  hasShirts: Boolean!
  eventId: Int
  isPrivate: Boolean!
  defaultCapacity: Int
  locationId: Int!
  discountId: Int
  variants: [CreateCampVariantInput!]!
  ageRanges: [CreateAgeRangeInput!]
  ageRangeIds: [Int!]
  fileIds: [Int!]
}

input CreateAgeRangeInput {
  name: String
  minAge: Int
  maxAge: Int
}

input UpdateCampInput {
  name: String
  description: String
  thumbnailId: Int
  defaultPrice: Decimal
  mealPrice: Decimal
  hasShirts: Boolean
  eventId: Int
  isPrivate: Boolean
  defaultCapacity: Int
  locationId: Int
  discountId: Int
  variants: [CreateCampVariantInput!]
  ageRanges: [CreateAgeRangeInput!]
  ageRangeIds: [Int!]
  fileIds: [Int!]
  id: Int!
  ageRangeIdsToDelete: [Int!]
  variantIdsToDelete: [Int!]
  variantsToUpdate: [UpdateCampVariantInput!]
}

input CreateEventInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateEventInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input TempSignInInput {
  email: String!
  password: String!
}

input TokenRequestInput {
  firebaseToken: String!
  isAdmin: Boolean = false
}

input CreateUserInput {
  firebaseToken: String!
  name: String!
  type: UserType!
  email: String!
  phone: String
  district: String
  parentAdditional: [CreateParentAdditionalInput!]
  children: [CreateChildInput!]
}

input UpdateUserInput {
  id: String!
  childrenToDelete: [Int!] = []
  parentAdditionalToDelete: [Int!] = []
  childrenToAdd: [CreateChildInput!] = []
  parentAdditionalToAdd: [CreateParentAdditionalInput!] = []
  name: String
  phone: String
  district: String
}

input UpdateAgeRangeInput {
  name: String
  minAge: Int
  maxAge: Int
  id: Int!
}

input CreateAllergyInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateAllergyInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCampRegistrationInput {
  parentId: String!
  campId: Int!
  oneDayPrice: Decimal
  totalPrice: Decimal
  paymentMethod: PaymentMethod
  campVariantRegistrations: [CreateCampVariantRegistrationInput!]
}

input UpdateCampRegistrationInput {
  id: Int!
  parentId: String
  variantsToDelete: [Int!]
  oneDayPrice: Decimal
  totalPrice: Decimal
  paymentMethod: PaymentMethod
  campVariantRegistrations: [CreateCampVariantRegistrationInput!]
}

input ProcessCampRegistration {
  campRegistrationId: Int!
  paymentMethod: PaymentMethod
}

input CreateChildReportInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateChildReportInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateChildReportHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateChildReportHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateDiscountInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDiscountInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateEventFileInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateEventFileInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateRegistrationAttendanceInput {
  campRegistrationId: Int!
  campVariantId: Int!
  childId: Int!
}

input CreateRegistrationHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateRegistrationHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateRegistrationPaymentHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateRegistrationPaymentHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSettingInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSettingInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSchoolInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSchoolInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateRegistrationReserveInput {
  campRegistrationId: Int!
  campVariantId: Int!
  count: Int!
  paymentId: Int!
  userId: String!
  expirationDate: DateTime
}

input UpdateRegistrationReserveInput {
  campRegistrationId: Int
  campVariantId: Int
  count: Int
  paymentId: Int
  userId: String
  expirationDate: DateTime
  id: Int!
}